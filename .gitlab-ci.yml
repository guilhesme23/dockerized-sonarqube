stages:
  - build
  - publish


variables:
  IMAGE_SONAR: "sonarqube"
  IMAGE_SCANNER: "sonarscanner"
  IMAGE_VERSION: $CI_COMMIT_SHORT_SHA

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build sonar:
  stage: build
  image: docker:stable
  services: 
    - docker:dind
  script:
    - docker build -t $IMAGE_SONAR:$IMAGE_VERSION .
  only:
    - devel
    - master

build scanner:
  stage: build
  image: docker:stable
  services: 
    - docker:dind
  script:
    - docker build -t $IMAGE_SCANNER:$IMAGE_VERSION ./scanner
  only:
    - devel
    - master

publish stable:
  stage: publish
  image: docker:stable
  services: 
    - docker:dind
  variables:
    IMAGE_VERSION: stable
  script:
    - docker build -t $IMAGE_SONAR:$IMAGE_VERSION .
    - docker build -t $IMAGE_SCANNER:$IMAGE_VERSION ./scanner
    - docker push $IMAGE_SONAR:$IMAGE_VERSION
    - docker push $IMAGE_SCANNER:$IMAGE_VERSION
  only:
    - tags

.tag_script: &tag_script |
  if [ -z "$CI_COMMIT_TAG" ]; then
    export IMAGE_VERSION=$CI_COMMIT_SHORT_SHA
  else
    export IMAGE_VERSION=$CI_COMMIT_TAG
  fi

dockerhub:
  stage: publish
  image: docker:stable
  services: 
    - docker:dind
  before_script:
    - *tag_script
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
  script:
    - docker build -t $DOCKERHUB_USER/$IMAGE_SONAR:$IMAGE_VERSION .
    - docker build -t $DOCKERHUB_USER/$IMAGE_SCANNER:$IMAGE_VERSION ./scanner
    - docker push $DOCKERHUB_USER/$IMAGE_SONAR:$IMAGE_VERSION
    - docker push $DOCKERHUB_USER/$IMAGE_SCANNER:$IMAGE_VERSION
  only:
    - devel
    - master
    - tags
